// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ZivaRT
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

internal struct RestPose : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static RestPose GetRootAsRestPose(ByteBuffer _bb) { return GetRootAsRestPose(_bb, new RestPose()); }
  public static RestPose GetRootAsRestPose(ByteBuffer _bb, RestPose obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RestPose __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// xyzxyzxyz of each vertex in rest pose
  public float Shape(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(__p.__vector(o) + j * 4) : (float)0; }
  public int ShapeLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<float> GetShapeBytes() { return __p.__vector_as_span<float>(4, 4); }
#else
  public ArraySegment<byte>? GetShapeBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public float[] GetShapeArray() { return __p.__vector_as_array<float>(4); }
  public float WorldTransforms(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(__p.__vector(o) + j * 4) : (float)0; }
  public int WorldTransformsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<float> GetWorldTransformsBytes() { return __p.__vector_as_span<float>(6, 4); }
#else
  public ArraySegment<byte>? GetWorldTransformsBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public float[] GetWorldTransformsArray() { return __p.__vector_as_array<float>(6); }
  public float LocalTransforms(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(__p.__vector(o) + j * 4) : (float)0; }
  public int LocalTransformsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<float> GetLocalTransformsBytes() { return __p.__vector_as_span<float>(8, 4); }
#else
  public ArraySegment<byte>? GetLocalTransformsBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public float[] GetLocalTransformsArray() { return __p.__vector_as_array<float>(8); }
  public float ExtraParameters(int j) { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(__p.__vector(o) + j * 4) : (float)0; }
  public int ExtraParametersLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<float> GetExtraParametersBytes() { return __p.__vector_as_span<float>(10, 4); }
#else
  public ArraySegment<byte>? GetExtraParametersBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public float[] GetExtraParametersArray() { return __p.__vector_as_array<float>(10); }
  public string JointNames(int j) { int o = __p.__offset(12); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int JointNamesLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string ExtraParameterNames(int j) { int o = __p.__offset(14); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ExtraParameterNamesLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ZivaRT.RestPose> CreateRestPose(FlatBufferBuilder builder,
      VectorOffset shapeOffset = default(VectorOffset),
      VectorOffset world_transformsOffset = default(VectorOffset),
      VectorOffset local_transformsOffset = default(VectorOffset),
      VectorOffset extra_parametersOffset = default(VectorOffset),
      VectorOffset joint_namesOffset = default(VectorOffset),
      VectorOffset extra_parameter_namesOffset = default(VectorOffset)) {
    builder.StartTable(6);
    RestPose.AddExtraParameterNames(builder, extra_parameter_namesOffset);
    RestPose.AddJointNames(builder, joint_namesOffset);
    RestPose.AddExtraParameters(builder, extra_parametersOffset);
    RestPose.AddLocalTransforms(builder, local_transformsOffset);
    RestPose.AddWorldTransforms(builder, world_transformsOffset);
    RestPose.AddShape(builder, shapeOffset);
    return RestPose.EndRestPose(builder);
  }

  public static void StartRestPose(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddShape(FlatBufferBuilder builder, VectorOffset shapeOffset) { builder.AddOffset(0, shapeOffset.Value, 0); }
  public static VectorOffset CreateShapeVector(FlatBufferBuilder builder, float[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddFloat(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateShapeVectorBlock(FlatBufferBuilder builder, float[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartShapeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddWorldTransforms(FlatBufferBuilder builder, VectorOffset worldTransformsOffset) { builder.AddOffset(1, worldTransformsOffset.Value, 0); }
  public static VectorOffset CreateWorldTransformsVector(FlatBufferBuilder builder, float[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddFloat(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateWorldTransformsVectorBlock(FlatBufferBuilder builder, float[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartWorldTransformsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLocalTransforms(FlatBufferBuilder builder, VectorOffset localTransformsOffset) { builder.AddOffset(2, localTransformsOffset.Value, 0); }
  public static VectorOffset CreateLocalTransformsVector(FlatBufferBuilder builder, float[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddFloat(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateLocalTransformsVectorBlock(FlatBufferBuilder builder, float[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartLocalTransformsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddExtraParameters(FlatBufferBuilder builder, VectorOffset extraParametersOffset) { builder.AddOffset(3, extraParametersOffset.Value, 0); }
  public static VectorOffset CreateExtraParametersVector(FlatBufferBuilder builder, float[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddFloat(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateExtraParametersVectorBlock(FlatBufferBuilder builder, float[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartExtraParametersVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddJointNames(FlatBufferBuilder builder, VectorOffset jointNamesOffset) { builder.AddOffset(4, jointNamesOffset.Value, 0); }
  public static VectorOffset CreateJointNamesVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateJointNamesVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartJointNamesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddExtraParameterNames(FlatBufferBuilder builder, VectorOffset extraParameterNamesOffset) { builder.AddOffset(5, extraParameterNamesOffset.Value, 0); }
  public static VectorOffset CreateExtraParameterNamesVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateExtraParameterNamesVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartExtraParameterNamesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ZivaRT.RestPose> EndRestPose(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ZivaRT.RestPose>(o);
  }
};


}
